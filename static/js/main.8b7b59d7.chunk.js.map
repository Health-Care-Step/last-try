{"version":3,"sources":["components/NavMenu/NavMenu.js","components/Header/Header.js","store/items/itemsAction.js","store/items/actionsTypesItems.js","components/Button/Button.js","store/modal/modalActions.js","store/modal/actionsTypeModal.js","components/Modal/Modal.js","components/Item/Item.js","components/ItemList/ItemList.js","components/EmptyInfo/EmptyInfo.js","pages/Favorites/Favorites.js","components/OrderForm/OrderForm.js","pages/Basket/Basket.js","pages/All/MainPage.js","routes/AppRoutes.js","App.js","serviceWorker.js","store/modal/madalReducer.js","store/rootReducer.js","store/items/itemsReducer.js","store/title/titleReduser.js","store/configStore.js","index.js","assets/icons/star-1.svg","assets/icons/star-2.svg"],"names":["NavMenu","className","activeClassName","to","Header","getProducts","dispatch","fetch","then","res","json","data","type","payload","catch","error","Button","text","backgroundColor","modal","id","style","useDispatch","onClick","e","console","log","isActive","target","localStorage","removeItem","removeFromBasket","setItem","addToBasket","defaultProps","connect","Modal","props","header","body","closeBtn","actions","Item","product","add","remove","name","color","article","href","src","url","alt","price","getItem","starOne","starTwo","key","products","addToFavorites","removeFromFavorites","ItemList","basketProducts","favoritesProduct","map","length","state","items","EmptyInfo","Favorites","filter","nameRegExp","formSchema","yup","shape","firstname","required","matches","max","lastname","age","min","address","phone","FullOrderForm","totalPrice","forEach","initialValues","validationSchema","onSubmit","values","setSubmitting","ids","items_ids","formikProps","handleSubmit","noValidate","component","placeholder","disabled","isSubmitting","Basket","title","store","AppRoutes","exact","path","render","getItems","useEffect","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","action","inFavorites","inBasket","devTools","__REDUX_DEVTOOLS_EXTENSION__","f","createStore","compose","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.8b7b59d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./NavMenu.scss\"\r\n\r\nconst NavMenu = () =>  {\r\n    return (\r\n        <ul className='nav__menu'>\r\n            <li className='nav__item'>\r\n                <NavLink  activeClassName='active' to='/all'>All Products</NavLink>\r\n            </li>\r\n            <li className='nav__item'>\r\n                <NavLink to='/favorites'>Favorites</NavLink>\r\n            </li>\r\n            <li className='nav__item'>\r\n                <NavLink  activeClassName='active' to='/basket'>Your Basket</NavLink>\r\n            </li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport NavMenu from \"../NavMenu/NavMenu\";\r\nimport './Header.scss'\r\n\r\nconst  Header =()=>  {\r\n    return (\r\n        <div className='header'>\r\n            <NavMenu />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import {GET_ITEMS, GET_ITEMS_ERROR} from \"./actionsTypesItems\";\r\n\r\nexport const ADD_FAVORITES = 'ADD_FAVORITES';\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES';\r\nexport const ADD_TO_BASKET = 'ADD_TO_BASKET';\r\nexport const REMOVE_FROM_BASKET = 'REMOVE_FROM_BASKET';\r\nexport const DELETE_FROM_LOCAL = 'DELETE_FROM_LOCAL'\r\n\r\n\r\nexport const getProducts = () => (dispatch) => {\r\n    fetch('./items.json')\r\n        .then(res => res.json())\r\n        .then(data =>\r\n            dispatch({type: GET_ITEMS, payload: data})\r\n        )\r\n        .catch(error => {\r\n            dispatch({type: GET_ITEMS_ERROR, error})\r\n        })\r\n}\r\n\r\nexport const addToFavorites = (id) => (dispatch) => {\r\n    dispatch({type: ADD_FAVORITES, payload: id});\r\n    localStorage.setItem(`favorites-${id}`, true);\r\n}\r\n\r\nexport const removeFromFavorites = (id) => (dispatch) => {\r\n    dispatch({type: REMOVE_FROM_FAVORITES, payload: id});\r\n    localStorage.removeItem(`favorites-${id}`)\r\n}\r\n\r\nexport const addToBasket = (id) => (dispatch) => {\r\n    dispatch({type: ADD_TO_BASKET, payload: id});\r\n    localStorage.setItem(`basket-${id}`, true)\r\n}\r\n\r\nexport const removeFromBasket = (id) => (dispatch) => {\r\n    dispatch({type: REMOVE_FROM_BASKET, payload: id});\r\n    localStorage.removeItem(`basket-${id}`)\r\n}\r\n\r\nexport const removeFromStorage = (ids) => (dispatch) => {\r\n    ids.forEach( e => localStorage.removeItem(`basket-${e}`))\r\n    dispatch(getProducts())\r\n}","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const GET_ITEMS_ERROR = 'GET_ITEMS_ERROR';","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.scss';\r\nimport {connect, useDispatch} from 'react-redux'\r\nimport {addToBasket, removeFromBasket} from \"../../store/items/itemsAction\";\r\nimport {closeModal, openModal} from \"../../store/modal/modalActions\"\r\n\r\nconst Button = ({text, backgroundColor, modal, id, className} ) => {\r\n    const style = {backgroundColor: backgroundColor}\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <button\r\n            onClick={(e) => {\r\n                console.log(modal.isActive)\r\n               if ( e.target.className === \"buttons__btn_remove\" && !modal.isActive) {\r\n                   modal.type = 'close-modal'\r\n                   dispatch(openModal())\r\n                   dispatch(removeFromBasket(id))\r\n\r\n               }\r\n               if (modal.isActive) {\r\n                   dispatch(closeModal())\r\n               }\r\n               if (!modal.isActive && e.target.className === \"buttons__btn\" ) {\r\n                   modal.type = 'modal-success'\r\n                    dispatch(openModal())\r\n                   dispatch(addToBasket(id))\r\n            }\r\n        }}\r\n            className={\"buttons__btn\" + className}\r\n            style={style}>{text}</button>\r\n    );\r\n}\r\nButton.propTypes = {\r\n    backgroundColor: PropTypes.string,\r\n    text: PropTypes.string.isRequired,\r\n    modal: PropTypes.object.isRequired,\r\n    id: PropTypes.string,\r\n    className: PropTypes.string\r\n};\r\nButton.defaultProps = {\r\n    backgroundColor: 'transparent',\r\n    id: \"\",\r\n    className: ''\r\n}\r\nconst mapStoreToProps = ({modal}) => ({modal});\r\n\r\nexport default connect(mapStoreToProps)(Button);\r\n\r\n","\r\nimport {CLOSE_MODAL, OPEN_MODAL} from \"./actionsTypeModal\";\r\n\r\nexport const openModal = () => (dispatch) => {\r\n    dispatch({type: OPEN_MODAL});\r\n}\r\n\r\nexport const closeModal = () => (dispatch) => {\r\n    dispatch({type: CLOSE_MODAL});\r\n}","export const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.scss';\r\nimport Button from \"../Button/Button\";\r\nimport {closeModal} from \"../../store/modal/modalActions\";\r\n\r\n\r\n\r\nconst Modal = (props) => {\r\n    const {header, body, closeBtn, actions, type} = props;\r\n    const dispatch = useDispatch()\r\n        return (\r\n            <>\r\n                <div className={type}>\r\n                    <div className={type + '__header'}>\r\n                        <h2 className={type + '__header__title'}>{header}</h2>\r\n                        {closeBtn && <Button text='x'/>}\r\n                    </div>\r\n                    <div className={type + '__text'}>\r\n                        <p>{body}</p>\r\n                    </div>\r\n                    <div className={type + '__footer'}>\r\n                        {actions}\r\n                    </div>\r\n                </div>\r\n                <div className=\"shadow\" onClick={() => dispatch(closeModal())} />\r\n            </>\r\n        );\r\n}\r\nModal.propTypes = {\r\n    header: PropTypes.string,\r\n    closeBtn: PropTypes.bool.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    actions: PropTypes.array.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}\r\nModal.defaultProps = {\r\n    header: ''\r\n}\r\nexport default Modal;","import React from 'react';\r\nimport './Item.scss';\r\nimport starOne from \"./../../assets/icons/star-1.svg\"\r\nimport starTwo from \"./../../assets/icons/star-2.svg\"\r\nimport Button from \"../Button/Button\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport {connect} from 'react-redux';\r\nimport {addToFavorites, removeFromFavorites} from '../../store/items/itemsAction';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Item = (props) => {\r\n\r\n    const {product, modal, add, remove} = props;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"card__body\">\r\n                <div className=\"card__header\">\r\n                    <h2 className='card__title'>{product.name}</h2>\r\n                </div>\r\n                <div>Color : {product.color}</div>\r\n                <div>Article: {product.article}</div>\r\n                <a className=\"card__pic\" href=\"/\"><img src={product.url} alt=\"product\"/></a>\r\n                <div className=\"card__info\">\r\n                    <div className=\"card__price\">\r\n                        {product.price} грн\r\n                    </div>\r\n                    {!localStorage.getItem(`favorites-${product.article}`) &&\r\n                    <div onClick={() => add(product.article)}>Add to Favorite<img className=\"card__star\" src={starOne}\r\n                                                                                  alt=\"star\"/></div>}\r\n                    {localStorage.getItem(`favorites-${product.article}`) &&\r\n                    <div onClick={() => remove(product.article)}>Remove to Favorite<img className=\"card__star\"\r\n                                                                                        src={starTwo} alt=\"star\"/>\r\n                    </div>}\r\n                </div>\r\n                <div>\r\n                    {localStorage.getItem(`basket-${product.article}`)\r\n                        ? <Button text='Remove' backgroundColor='black' id={product.article} className='_remove'/>\r\n                        : <Button text='Add to card' backgroundColor='black' id={product.article}/>}\r\n                </div>\r\n            </div>\r\n            {modal.isActive && modal.type === 'modal-success' && <Modal\r\n                header='Congratulations! '\r\n                body=\"This bottle was added to your basket.\"\r\n                actions={[<Button\r\n                    key={0}\r\n                    text='OK'\r\n                    backgroundColor='green'\r\n                />]}\r\n                closeBtn={true}\r\n                type={modal.type}\r\n            />}\r\n            {modal.isActive && modal.type === 'close-modal' && <Modal\r\n                header='Removed'\r\n                body=\"This bottle has been removed from your basket !\"\r\n                actions={[<Button\r\n                    key={1}\r\n                    text='OK'\r\n                    backgroundColor='red'\r\n                />]}\r\n                closeBtn={true}\r\n                type={modal.type}\r\n            />}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nItem.propTypes = {\r\n    products: PropTypes.array,\r\n    modal: PropTypes.object.isRequired,\r\n    add: PropTypes.func.isRequired,\r\n    remove: PropTypes.func.isRequired\r\n};\r\nItem.defaultProps = {\r\n    products: []\r\n}\r\n\r\nconst mapStoreToProps = ({modal}) => ({modal})\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        add: (id) => dispatch(addToFavorites(id)),\r\n        remove: (id) => dispatch(removeFromFavorites(id))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Item);","import React from 'react';\r\nimport Item from '../Item/Item';\r\nimport './ItemList.scss';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from 'react-redux'\r\n\r\nconst ItemList = (props) => {\r\n    const {products=[],basketProducts=[], favoritesProduct=[]} = props;\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className='card__all'>\r\n                    {basketProducts && basketProducts.map(e => <Item product={e} key={e.article}  />)}\r\n                    {favoritesProduct && favoritesProduct.map(e => <Item product={e} key={e.article}  />)}\r\n                    {basketProducts.length < 1 && favoritesProduct.length < 1 && products.map(e => <Item product={e} key={e.article}  />)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nItemList.propTypes = {\r\n    products: PropTypes.array,\r\n    basketProducts: PropTypes.array.isRequired,\r\n    favoritesProduct: PropTypes.array\r\n    };\r\nItemList.defaultProps = {\r\n    products: [],\r\n    favoritesProduct: [],\r\n    basketProducts: []\r\n}\r\n\r\nconst mapStoreToProps = (state) => ({\r\n    products: state.items.data,\r\n})\r\n\r\nexport default connect(mapStoreToProps)(ItemList);","import React from 'react';\r\nimport \"./EmptyInfo.scss\"\r\n\r\nconst EmptyInfo = () => {\r\n    return (\r\n        <span className=\"empty_info\">No items have been added...(</span>\r\n    );\r\n}\r\n\r\nexport default EmptyInfo","import React from 'react';\r\nimport ItemList from \"../../components/ItemList/ItemList\";\r\nimport './Favorites.scss'\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport EmptyInfo from \"../../components/EmptyInfo/EmptyInfo\";\r\n\r\nconst Favorites = (props) => {\r\n    const {products} = props\r\n    const favoritesProduct = products.filter(e => localStorage.getItem(`favorites-${e.article}`))\r\n    return (\r\n        <div>\r\n            <h2 className='title'>Favorites</h2>\r\n            {favoritesProduct.length > 0 && <ItemList favoritesProduct={favoritesProduct}/>}\r\n            {favoritesProduct.length < 1 && <EmptyInfo />}\r\n        </div>\r\n    );\r\n}\r\n\r\nFavorites.propTypes = {\r\n    products: PropTypes.array\r\n};\r\nFavorites.defaultProps = {\r\n    products: [],\r\n}\r\n\r\nconst mapStoreToProps = (state) => ({\r\n    products: state.items.data\r\n})\r\nexport default connect(mapStoreToProps)(Favorites);","import React from 'react';\nimport './OrderForm.scss'\nimport {connect} from \"react-redux\";\nimport {removeFromStorage} from \"../../store/items/itemsAction\";\nimport {openModal} from \"../../store/modal/modalActions\"\nimport {Form, Field, Formik, ErrorMessage} from \"formik\";\nimport * as yup from 'yup';\n\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\nconst nameRegExp = /^[a-z ,.'-]+$/i\n\n\nconst formSchema = yup.object().shape({\n    firstname: yup\n        .string()\n        .required(\"This field is required\")\n        .matches(nameRegExp, 'First name is invalid')\n        .max(15, 'First name must be shorter then 15 symbols'),\n    lastname: yup\n        .string()\n        .required(\"This field is required\")\n        .matches(nameRegExp, 'Last name is invalid')\n        .max(15, 'Last name must be shorter then 15 symbols'),\n    age: yup\n        .number()\n        .min(18, 'You must be over 18 years old')\n        .max(100, \"Please enter a correct age\")\n        .required(\"This field is required\"),\n    address: yup\n        .string()\n        .required(\"This field is required\"),\n    phone: yup\n        .string()\n        .matches(phoneRegExp, 'Phone number is not valid')\n        .required(\"This field is required\"),\n})\n\n\nlet FormikForm = (props) => {\n\n    const {products, dispatch} = props;\n    console.log(props);\n\n\n    const handleSubmit = (values, {props, setSubmitting}) => {\n        console.log(values, products);\n\n        let items_ids = products.map(e => e.article)\n       dispatch(removeFromStorage(items_ids))\n        setSubmitting(false)\n        dispatch(openModal())\n    }\n\n    let totalPrice = 0;\n    products.forEach(e => totalPrice += +e.price)\n\n\n    return (\n        <Formik\n            initialValues={{\n                firstname: '',\n                lastname: '',\n                age: '',\n                address: '',\n                phone: ''\n            }}\n            validationSchema={formSchema}\n            onSubmit={handleSubmit}\n        >\n\n        {(formikProps) => {\n                // console.log('Formik props', formikProps)\n\n            return (\n                    <Form onSubmit={formikProps.handleSubmit} className='order-form' noValidate>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='firstname'\n                               placeholder='Your first name'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='firstname' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='lastname'\n                               placeholder='Your last name'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='lastname' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='age'\n                               placeholder='Your age'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='age' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='text'\n                               name='address'\n                               placeholder='Delivery address'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='address' /></span>\n                        <Field component='input'\n                               className='order-form'\n                               type='number'\n                               name='phone'\n                               placeholder='Phone number'\n                               required={true}\n                        />\n                        <span className='error'><ErrorMessage name='phone' /></span>\n                        <span className='item-info'>Amount: {products.length} bottle(s)</span>\n                        <span className='item-info'>Total: {totalPrice} грн</span>\n                        <button className='btn__checkout' type='submit' disabled={formikProps.isSubmitting}>Checkout</button>\n                    </Form>\n                );\n            }}\n        </Formik>\n    )\n}\n\nlet FullOrderForm = connect()(FormikForm)\n\nexport default FullOrderForm;","import React from 'react';\r\nimport ItemList from \"../../components/ItemList/ItemList\";\r\nimport './Basket.scss'\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport EmptyInfo from \"../../components/EmptyInfo/EmptyInfo\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\nimport Button from \"../../components/Button/Button\";\r\nimport FullOrderForm from \"../../components/OrderForm/OrderForm\";\r\n\r\n\r\nconst Basket = (props) => {\r\n\r\n    const {products, modal} = props;\r\n\r\n    const basketProducts = products.filter(e => localStorage.getItem(`basket-${e.article}`))\r\n    return (\r\n        <div className='basket__container'>\r\n            <div>\r\n            <h2 className='title'>Basket</h2>\r\n            {basketProducts.length < 1 && <EmptyInfo/>}\r\n            {basketProducts.length > 0 && <ItemList basketProducts={basketProducts}/>}\r\n            </div>\r\n            {basketProducts.length > 0 &&\r\n            <div className='form__container'>\r\n                <h2>***Fill the Order Form***</h2>\r\n                <FullOrderForm products={basketProducts} />\r\n            </div>}\r\n            {modal.isActive && modal.type === 'modal-success' && <Modal\r\n                title='Success'\r\n                body='Your order is confirmed! Please, wait for manager call.'\r\n                actions={[<Button\r\n                    key={0}\r\n                    text='OK'\r\n                    backgroundColor='#00000030'\r\n                />]}\r\n                closeBtn={true}\r\n                type={modal.type}\r\n            />}\r\n            {modal.isActive && modal.type === 'modal-success' && <Modal\r\n                title='Success'\r\n                body='Your order is confirmed! Please, wait for manager call.'\r\n                actions={[<Button\r\n                    key={0}\r\n                    text='OK'\r\n                    backgroundColor='#00000030'\r\n                />]}\r\n                closeBtn={true}\r\n                type={modal.type}\r\n            />}\r\n            {modal.isActive && modal.type === 'close-modal' && <Modal\r\n                header='Removed'\r\n                body=\"This bottle has been removed from your basket !\"\r\n                actions={[<Button\r\n                    key={1}\r\n                    text='OK'\r\n                    backgroundColor='red'\r\n                />]}\r\n                closeBtn={true}\r\n                type={modal.type}\r\n            />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nBasket.propTypes = {\r\n    products: PropTypes.array,\r\n    modal: PropTypes.object.isRequired\r\n};\r\nBasket.defaultProps = {\r\n    products: [],\r\n}\r\n\r\nconst mapStoreToProps = (state) => ({\r\n    products: state.items.data,\r\n    modal:state.modal\r\n})\r\n\r\nexport default connect(mapStoreToProps)(Basket);","import React from 'react';\r\nimport ItemList from \"../../components/ItemList/ItemList\";\r\nimport \"./MainPage.scss\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst MainPage = (props) => {\r\n    const {title} = props;\r\n    return (\r\n        <>\r\n            <h2 className='header__title'>{title}</h2>\r\n            <ItemList />\r\n        </>\r\n    );\r\n}\r\nconst mapStoreToProps = store=> store.title;\r\n\r\nexport default connect(mapStoreToProps)(MainPage);\r\n","import React from 'react';\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport Favorites from \"../pages/Favorites/Favorites\";\r\nimport Basket from \"../pages/Basket/Basket\"\r\nimport MainPage from \"../pages/All/MainPage\";\r\n\r\nconst AppRoutes = () => {\r\n    return (\r\n            <Switch>\r\n                <Route exact path='/' render={() => <Redirect to='/mainPage' />}/>\r\n                <Route exact path='/favorites' render={() => <Favorites />}/>\r\n                <Route exact path='/basket' render={() => <Basket />}/>\r\n                <Route exact path='/mainPage' render={() => <MainPage />}/>\r\n            </Switch>\r\n    );\r\n}\r\n\r\nexport default AppRoutes;\r\n","import React, {useEffect} from 'react';\r\nimport Header from \"./components/Header/Header\"\r\nimport AppRoutes from \"./routes/AppRoutes\";\r\nimport {getProducts} from \"./store/items/itemsAction\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst App = ({getItems}) => {\r\n\r\n    useEffect(() => {\r\n        getItems()\r\n    }, [getItems])\r\n\r\n    return (\r\n        <>\r\n            <Header/>\r\n            <AppRoutes/>\r\n        </>\r\n    );\r\n}\r\n\r\nApp.propTypes = {\r\n    getItems: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getItems: () => dispatch(getProducts())\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {CLOSE_MODAL, OPEN_MODAL} from \"./actionsTypeModal\";\r\n\r\nconst initialState = {\r\n    // type: 'modal-success',\r\n    isActive: false\r\n}\r\n\r\nexport function modalReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_MODAL:\r\n            return {\r\n                ...state,\r\n                isActive: true\r\n            }\r\n        case CLOSE_MODAL:\r\n            return {\r\n                ...state,\r\n                isActive: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {itemsReducer} from \"./items/itemsReducer\";\r\nimport {modalReducer} from \"./modal/madalReducer\";\r\nimport {titleReducer} from \"./title/titleReduser\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    modal:modalReducer,\r\n    items: itemsReducer,\r\n    title: titleReducer,\r\n})","\r\nimport {ADD_FAVORITES, REMOVE_FROM_FAVORITES, REMOVE_FROM_BASKET, ADD_TO_BASKET, DELETE_FROM_LOCAL} from \"./itemsAction\"\r\nimport {GET_ITEMS} from \"./actionsTypesItems\"\r\n\r\nexport function itemsReducer (state = [], action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            return {...state, data: action.payload}\r\n\r\n        case ADD_FAVORITES:\r\n            localStorage.setItem(`favorites-${action.payload}`, 'true')\r\n            return {\r\n                ...state,\r\n                data: state.data.map(e => {\r\n                    return e.article === action.payload\r\n                        ? {\r\n                            ...e,\r\n                            inFavorites: true,\r\n                        }\r\n                        : e\r\n                })\r\n            }\r\n\r\n        case REMOVE_FROM_FAVORITES:\r\n            localStorage.removeItem(`favorites-${action.payload}`)\r\n            return {\r\n                ...state,\r\n                data: state.data.map(e => {\r\n                    return e.article === action.payload\r\n                        ? {\r\n                            ...e,\r\n                            inFavorites: false,\r\n                        }\r\n                        : e\r\n                })\r\n            }\r\n        case ADD_TO_BASKET:\r\n            localStorage.setItem(`basket-${action.payload}`, 'true')\r\n            return {\r\n                ...state,\r\n                data: state.data.map(e => {\r\n                    return e.article === action.payload\r\n                        ? {\r\n                            ...e,\r\n                            inBasket: true,\r\n                        }\r\n                        : e\r\n                })\r\n            }\r\n        case REMOVE_FROM_BASKET:\r\n            localStorage.removeItem(`basket-${action.payload}`)\r\n            return {\r\n                ...state,\r\n                data: state.data.map(e => {\r\n                    return e.article === action.payload\r\n                        ? {\r\n                            ...e,\r\n                            inBasket: false,\r\n                        }\r\n                        : e\r\n                })\r\n            }\r\n        case DELETE_FROM_LOCAL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nexport function titleReducer (state = {title: \"Our Products\"}) {\r\n    return state\r\n}\r\n","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"./rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f => f);\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(thunk),devTools)\r\n);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux'\r\nimport {store} from \"./store/configStore\";\r\n\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/star-1.afce843d.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-2.ca05b033.svg\";"],"sourceRoot":""}